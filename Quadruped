>>>>>>> template <typename T, typename T2>
	Vec3<T> withLegSigns(const Eigen::MatrixBase<T2>& v, int legID) 
	函数功能：输入参数v是机械结构相对于机器人机体中心点在x、y和z三个方向上的距离，根据此机械结构所属的腿不同，将其转换为相对于机体中心点为原点的位置坐标输出。

>>>>>>> template <typename T>
	Mat3<typename T::Scalar> vectorToSkewMat(const Eigen::MatrixBase<T>& v)
	函数功能：输入三维向量v，输出v所对应的反对称矩阵
	参考：https://blog.csdn.net/u012200261/article/details/56494754/

>>>>>>> template <typename T, typename T2>
	auto createSXform(const Eigen::MatrixBase<T>& R,const Eigen::MatrixBase<T2>& r)
	函数功能：输出矩阵X (6×6)
			X = |          R                         0   |
			    | -R*vectorToSkewMat(r)              R   |
                            
>>>>>>> template <typename T>
	Mat3<T> coordinateRotation(CoordinateAxis axis, T theta)
	函数功能：根据枚举类型的输入参数axis(X/Y/Z)以及旋转角theta，输出旋转矩阵R(3×3)


